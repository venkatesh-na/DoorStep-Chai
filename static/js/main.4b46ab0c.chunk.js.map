{"version":3,"sources":["components/Context.js","components/RadioContainer.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","name","phone","address","radioValue","qnt","noOfPeople","price","userData","setUserData","nameError","setNameError","phoneError","setPhoneError","addressError","setAddressError","radioError","setRadioError","status","setStatus","code","message","statusMessage","setStatusMessage","useEffect","handleSubmit","e","a","preventDefault","length","match","fetch","method","headers","body","JSON","stringify","res","console","log","window","scrollTo","top","setTimeout","Provider","value","handleChange","fieldName","target","useGlobalContext","useContext","RadioContainer","className","onChange","type","checked","Form","alert","min","max","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b46ab0c.chunk.js","sourcesContent":["import React , { useState, useContext , useEffect} from \"react\"\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children})=>{\r\n    const [userData,setUserData] = useState({\r\n        name:\"\",\r\n        phone:\"\",\r\n        address:\"\",\r\n        radioValue:\"\",\r\n        qnt:3,\r\n        noOfPeople:1,\r\n        price:5\r\n    })\r\n\r\n    //error message\r\n    const [nameError,setNameError] = useState(\"\")\r\n    const [phoneError,setPhoneError] = useState(\"\")\r\n    const [addressError,setAddressError] = useState(\"\")\r\n    const [radioError,setRadioError] = useState(\"\")\r\n    const [status,setStatus] = useState(false)\r\n\r\n    //message accordin to status code\r\n    const [statusMessage,setStatusMessage] = useState({code:\"\",message:\"\"})\r\n\r\n    //handle Input onChange\r\n    const handleChange = (e)=>{\r\n        const fieldName = e.target.name\r\n        const value = e.target.value\r\n        setUserData({...userData,[fieldName]:value})\r\n        }\r\n\r\n        useEffect(()=>{\r\n            //dynamic price change\r\n            setUserData({...userData,price:userData.noOfPeople*5})\r\n        },[userData.noOfPeople])\r\n\r\n    //handle Form submission\r\n    const handleSubmit = async (e)=>{\r\n        e.preventDefault()\r\n        const {name,phone,address,radioValue,qnt,noOfPeople,price} = userData\r\n        if(name.length > 2 && phone.match(/^[7-9][0-9]{9}$/) !== null && address && radioValue)\r\n        {\r\n            try\r\n            {\r\n            const res = await fetch(\"https://doorstep-chai-e0ce8-default-rtdb.firebaseio.com/userData.json\",\r\n            {\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    name,\r\n                    phone,\r\n                    address,\r\n                    radioValue,\r\n                    qnt,\r\n                    noOfPeople,\r\n                    price\r\n            })})\r\n            if(res.status == 200)\r\n            {\r\n                console.log(res)\r\n                setNameError(\"\")\r\n                setPhoneError(\"\")\r\n                setAddressError(\"\")\r\n                setRadioError(\"\")\r\n                setUserData({\r\n                    name:\"\",\r\n                    phone:\"\",\r\n                    address:\"\",\r\n                    radioValue:\"\",\r\n                    qnt:\"\",\r\n                    noOfPeople:\"\",\r\n                    price:\"\"\r\n                })\r\n\r\n                //scroll to top for message showcase\r\n                window.scrollTo({\r\n                    top:0,\r\n                })\r\n\r\n                setStatus(true)\r\n                setStatusMessage({code:\"200\",message:\"Thank Yor for ordering from DoorStep Chai\"})\r\n                let timer;\r\n                timer = setTimeout(()=>{\r\n                    setStatus(false)\r\n                    setStatusMessage({code:\"\",message:\"\"})\r\n                },3000)\r\n            }\r\n            else if(res.status == 423)\r\n            {\r\n                //database is locked\r\n                window.scrollTo({\r\n                    top:0,\r\n                })\r\n                setStatus(true)\r\n                setStatusMessage({code:\"420\",message:\"DoorStep Chai is closed try again on 7 AM\"})\r\n                  let timer;\r\n                timer = setTimeout(()=>{\r\n                    setStatus(false)\r\n                    setStatusMessage({code:\"\",message:\"\"})\r\n                },3000)\r\n            }\r\n        }\r\n        catch(error)\r\n        {\r\n            //internet error\r\n            console.log(\"loading\")\r\n            window.scrollTo({\r\n                    top:0,\r\n                })\r\n            setStatus(true)\r\n            setStatusMessage({code:\"\",message:\"please turn on your internet\"})\r\n            let timer;\r\n                timer = setTimeout(()=>{\r\n                    setStatus(false)\r\n                    setStatusMessage({code:\"\",message:\"\"})\r\n                },3000)\r\n        }\r\n        }\r\n        else\r\n        {\r\n            if(name.length < 3)\r\n            {\r\n               setNameError(\"please enter your name\")\r\n            }\r\n            if(phone === \"\" || phone.match(/^[7-9][0-9]{9}$/) == null)\r\n            {\r\n                setPhoneError(\"please enter your valid phone number\")\r\n            }\r\n            if(address === \"\")\r\n            {\r\n                setAddressError(\"please enter your address\")\r\n            }\r\n            if(radioValue === \"\")\r\n            {\r\n                setRadioError(\"select any tea flavour\")\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <AppContext.Provider value = {\r\n            {handleChange,\r\n            handleSubmit,\r\n            userData,\r\n            nameError,\r\n            phoneError,\r\n            addressError,\r\n            radioError,\r\n            status,\r\n            statusMessage}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n} \r\n\r\nconst useGlobalContext = ()=>{\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppProvider , useGlobalContext}","import React from \"react\"\r\nimport { useGlobalContext } from \"./Context\"\r\nconst RadioContainer = ()=>{\r\n    const {handleChange,userData} = useGlobalContext()\r\n    const {radioValue} = userData\r\n    return (\r\n         <div className = \"radio-container\">\r\n                    <p>choose your type </p>\r\n                    <div>\r\n                        <label className = {radioValue == \"Ginger\" ? \"box\" : \"\"}>\r\n                            Ginger\r\n                            <input onChange = {handleChange} value = \"Ginger\" type = \"radio\" name = \"radioValue\" checked = {radioValue == \"Ginger\" ? true : false}/>\r\n                        </label>\r\n                        <label  className = {radioValue == \"Cardamom\" ? \"box\" : \"\"}>\r\n                            Cardamom\r\n                            <input onChange = {handleChange} value = \"Cardamom\" type = \"radio\" name = \"radioValue\" checked = {radioValue == \"Cardamom\" ? true : false}/>\r\n                        </label>\r\n                        <label  className = {radioValue == \"Mint\" ? \"box\" : \"\"}>\r\n                            Mint\r\n                            <input onChange = {handleChange} value = \"Mint\" type = \"radio\" name = \"radioValue\" checked = {radioValue == \"Mint\" ? true : false}/>\r\n                        </label>\r\n                        <label  className = {radioValue == \"Cocktail\" ? \"box\" : \"\"}>\r\n                            Cocktail\r\n                            <input onChange = {handleChange} value = \"Cocktail\" type = \"radio\" name = \"radioValue\"  checked = {radioValue == \"Cocktail\" ? true : false}/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\nexport default RadioContainer;","import React, { useState } from \"react\"\r\nimport RadioContainer from \"./RadioContainer\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nconst Form = ()=>{\r\n    const {handleChange,handleSubmit,userData,alert,nameError,phoneError,addressError,radioError,status,statusMessage} = useGlobalContext()\r\n    const {name,phone,address,radioValue,qnt,noOfPeople,price} = userData\r\n    return ( \r\n        <section className = \"form-container\">\r\n            <h1>DoorStep Chai</h1>\r\n            <form>\r\n                {status && <p className = {statusMessage.code == \"200\" ? \"success\" : \"message\"}>{statusMessage.message}</p>}\r\n                <label>\r\n                    <span>name</span>\r\n                    <input onChange = {handleChange} value = {name} type = \"text\" name = \"name\"/>\r\n                    {nameError && <p className = \"message\">{name.length > 2 ? \"\" : nameError}</p>}\r\n                </label>\r\n                <label>\r\n                    <span>phone</span>\r\n\r\n                    <input onChange = {handleChange} value = {phone} type = \"tel\" name = \"phone\"/>\r\n                    {phoneError && <p className = \"message\">{phone.match(/^[7-9][0-9]{9}$/) == null ? phoneError : \"\"}</p>}\r\n                </label>\r\n\r\n                <label>\r\n                    <span>address</span>\r\n                    <textarea value = {address} onChange = {handleChange} name = \"address\">\r\n\r\n                    </textarea>\r\n                    {addressError && <p className = \"message\">{address.length > 10 ? \"\" : addressError}</p>}\r\n                </label>\r\n\r\n                <RadioContainer/>\r\n                {radioError && <p className = \"message\">{radioValue ? \"\" : radioError}</p>}\r\n                \r\n                <div className = \"range-container\">\r\n                    <span>quantity of sugar</span>\r\n                    <input onChange = {handleChange} value = {qnt} name = \"qnt\" type = \"range\" min = \"1\" max = \"5\">\r\n                        </input>\r\n                    <p className = \"normal\">Normal</p>\r\n                </div>\r\n\r\n                <label>\r\n                    <span>choose cup of tea</span>\r\n                    <input onChange = {handleChange} value = {noOfPeople} name = \"noOfPeople\" type = \"number\" min = \"1\" max = \"10\"/>\r\n                </label>\r\n                <div className = \"form-footer\">\r\n                    <p className = \"price\">price: {price}rs</p>\r\n                    <button onClick = {handleSubmit} className = \"order\" type = \"submit\">order</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\nexport default Form;","import React from \"react\";\nimport Form from \"./components/Form\"\nimport './App.css';\n\nfunction App() {\n  return (\n      <main>\n        <Form/>\n      </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from \"./components/Context\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}